import("//webrtc.gni")

if (is_android) {
  import("//build/config/android/config.gni")
  import("//build/config/android/rules.gni")
} else if (is_mac) {
  import("//build/config/mac/rules.gni")
} else if (is_ios) {
  import("//build/config/ios/rules.gni")
} else if (is_linux || is_chromeos) {
  import("//build/config/linux/pkg_config.gni")
}

if (is_linux) {
  rtc_executable("voip_client") {
    testonly = true
    sources = [
      "main.cc",
      "voip_client.cc",
      "voip_client.h",
      "window_view.h",
    ]

    sources += [
      "gtk_window.cc",
      "gtk_window.h",
    ]
    cflags = [ "-Wno-deprecated-declarations" ]
    configs += [ "//examples:gtk_config" ]

    deps = [
      "../../rtc_base:async_packet_socket",
      "../../rtc_base:async_udp_socket",
      "../../rtc_base:logging",
      "../../rtc_base:network",
      "../../rtc_base:socket_address",
      "../../rtc_base:socket_server",
      "../../rtc_base:ssl",
      "../../rtc_base:threading",
      "//api:transport_api",
      "//api/audio_codecs:audio_codecs_api",
      "//api/audio_codecs:builtin_audio_decoder_factory",
      "//api/audio_codecs:builtin_audio_encoder_factory",
      "//api/task_queue:default_task_queue_factory",
      "//api/voip:voip_api",
      "//api/voip:voip_engine_factory",
      "//rtc_base/third_party/sigslot:sigslot",
      "//third_party/abseil-cpp/absl/memory:memory",
    ]
  }
}
